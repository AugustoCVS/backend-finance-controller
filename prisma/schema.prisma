generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String         @id @default(uuid())
  name             String
  email            String         @unique
  password         String
  confirm_password String
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  active           Boolean        @default(true)
  refresh_token    RefreshToken[]
  Account          Account[]
  Transactions     Transactions[]

  @@map("users")
}

model RefreshToken {
  id        String @id @default(uuid())
  expiresIn Int
  user      User   @relation(fields: [userId], references: [id])
  userId    String

  @@map("refresh_token")
}

model Account {
  id           String         @id @default(uuid())
  name         String
  balance      Float
  bank         Bank
  accountType  AccountType
  description  String
  user         User           @relation(fields: [userId], references: [id])
  userId       String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Transactions Transactions[]

  @@map("accounts")
}

enum AccountType {
  CORRENTE
  POUPANCA
  SALARIO
  PAGAMENTOS
  OUTRAS
}

enum Bank {
  ITAU_UNIBANCO
  BRADESCO
  SANTANDER
  BTG_PACTUAL
  NUBANK
  C6
  INTER
  CAIXA
  OUTROS
}

model Transactions {
  id          String          @id @default(uuid())
  description String
  value       Float
  date        DateTime
  type        TransactionType
  account     Account         @relation(fields: [accountId], references: [id])
  accountId   String
  user        User            @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  @@map("transactions")
}

enum TransactionType {
  INCOME
  OUTCOME
}
